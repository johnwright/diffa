/**
 * Copyright (C) 2010-2012 LShift Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package net.lshift.diffa.kernel.diag.cassandra


import java.util.UUID
import me.prettyprint.cassandra.utils.TimeUUIDUtils._
import net.lshift.diffa.kernel.diag.ExplainLogEntry
import scala.reflect.BeanProperty
import org.joda.time.DateTime

/**
 * Cassandra-specific explain log entry for Jackson serialization to JSON.
 */
object CassandraExplainLogEntry {

  def apply(source: String,
            msg: String,
            scanId: Option[Long] = None,
            attachmentId: Option[String] = None): CassandraExplainLogEntry = {

    CassandraExplainLogEntry(id = getUniqueTimeUUIDinMillis(),
                             source = source,
                             msg = msg,
                             scanId = scanId.map(id => new java.lang.Long(id)).orNull,
                             attachmentId = attachmentId.orNull)
  }
}

/**
 * N.B. the constructors in this class are intended to be used exclusively by Jackson.
 *
 * To ensure uniqueness of columns in Cassandra and proper ordering, the "id" field
 * value MUST have been generated by TimeUUIDUtils.getUniqueTimeUUIDinMillis()
 */
case class CassandraExplainLogEntry(@BeanProperty var id: UUID,
                                    @BeanProperty var source: String,
                                    @BeanProperty var msg: String,
                                    @BeanProperty var scanId: java.lang.Long,
                                    @BeanProperty var attachmentId: String) { self =>

  def this() = this(null, null, null, null, null)

  def toExplainLogEntry = ExplainLogEntry(timestamp = new DateTime(getTimeFromUUID(self.id)),
                                        source = self.source,
                                        msg = self.msg,
                                        scanId = Option(self.scanId).map(_.longValue),
                                        attachmentId = Option(self.attachmentId))
}